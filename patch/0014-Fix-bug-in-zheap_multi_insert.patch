From 68874fdc5d8849255515c591b7c5c5fc6a12df83 Mon Sep 17 00:00:00 2001
From: Kuntal Ghosh <kuntal.ghosh@enterprisedb.com>
Date: Wed, 10 Jul 2019 13:12:47 +0530
Subject: [PATCH 14/18] Fix bug in zheap_multi_insert

In zheap_multi_insert, we should not pfree the undorecords explicitely.
It's already getting freed in FinishUndoRecordInsert.
---
 src/backend/access/zheap/zheapam.c | 13 +++++--------
 1 file changed, 5 insertions(+), 8 deletions(-)

diff --git a/src/backend/access/zheap/zheapam.c b/src/backend/access/zheap/zheapam.c
index 90c8fff..b915c8b 100644
--- a/src/backend/access/zheap/zheapam.c
+++ b/src/backend/access/zheap/zheapam.c
@@ -8028,20 +8028,17 @@ reacquire_buffer:
 
 		END_CRIT_SECTION();
 
-		/* be tidy */
+		UnlockReleaseBuffer(buffer);
+		if (vmbuffer != InvalidBuffer)
+			ReleaseBuffer(vmbuffer);
 		if (!skip_undo)
 		{
+			/* be tidy */
 			for (i = 0; i < zfree_offset_ranges->nranges; i++)
 				pfree(undorecord[i].uur_payload.data);
-			pfree(undorecord);
+			FinishUndoRecordInsert(&zh_undo_info.context);
 		}
 		pfree(zfree_offset_ranges);
-
-		UnlockReleaseBuffer(buffer);
-		if (vmbuffer != InvalidBuffer)
-			ReleaseBuffer(vmbuffer);
-		if (!skip_undo)
-			FinishUndoRecordInsert(&zh_undo_info.context);
 		UnlockReleaseTPDBuffers();
 
 		ndone += nthispage;
-- 
1.8.3.1

